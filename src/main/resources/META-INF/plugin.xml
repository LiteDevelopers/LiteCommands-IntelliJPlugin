<idea-plugin>

    <id>dev.rollczi.litecommands.intellijplugin</id>
    <name>LiteCommands</name>
    <vendor email="rollczi.dev@gmail.com" url="https://rollczi.dev">Rollczi</vendor>

    <description>
        <![CDATA[
            <img src="https://github.com/Rollczi/LiteCommands/assets/49173834/4c297b16-eacd-4c89-ba34-2767b114e391" alt="banner" width="65%"/>
            <p>With LiteCommands plugin, you can easily develop your commands within<br>
             the <b>IntelliJ IDEA</b> environment. The plugin provides <b>annotation inspections</b>,<br>
              <b>tools</b> for creating new command classes, <b>syntax highlighting</b>, <b>code completion</b>,<br>
               and other useful features to make your development experience smoother and more efficient.</p>
            <p>LiteCommands - Annotation-command framework for Velocity, Bukkit,Paper, BungeeCord, Minestom,<br> Sponge, JDA and other implementations.
            <p>GitHub: <a href="https://github.com/Rollczi/LiteCommands">link</a></p>
            <p>Support: <a href="https://discord.gg/6cUhkj6uZJ">LiteCommands Discord</a></p>
            <p>Issues: <a href="https://github.com/Rollczi/LiteCommands/issues">link</a></p>
            <p>Documentation 3.x: <a href="https://litedevelopers.rollczi.dev/introdution.html">link</a></p>
            <p>Documentation 2.x: <a href="https://docs.rollczi.dev/">link</a></p>
            <img src="https://github.com/Rollczi/LiteCommands/assets/49173834/fea96613-af58-42bb-b32d-ffd6946ba4cc" alt="litecommandsbanner-intellij"/>
        ]]>

    </description>

    <depends>com.intellij.modules.platform</depends>
    <depends>com.intellij.modules.java</depends>
    <depends>org.jetbrains.kotlin</depends>

    <actions>
        <action
                id="LiteCommands.CreateCommandClass"
                class="dev.rollczi.litecommands.intellijplugin.template.LiteCommandsTemplatesAction"
                icon="dev.rollczi.litecommands.intellijplugin.icon.LiteIcons.LOGO"
        >
            <add-to-group group-id="NewGroup" anchor="after" relative-to-action="Kotlin.NewFile"/>
        </action>
    </actions>

    <resource-bundle>messages.LiteCommandsBundle</resource-bundle>

    <!-- Product and plugin compatibility requirements - https://plugins.jetbrains.com/docs/intellij/plugin-compatibility.html -->
    <!-- Extension points - https://plugins.jetbrains.com/docs/intellij/plugin-extension-points.html -->
    <extensions defaultExtensionNs="com.intellij">
        <codeInsight.inlayProvider implementationClass="dev.rollczi.litecommands.intellijplugin.inlay.LiteInlayHints" language="JAVA"/>

        <psi.referenceContributor
                language="JAVA"
                implementation="dev.rollczi.litecommands.intellijplugin.inlay.ref.LitePsiReferenceContributor"
        />

        <applicationConfigurable
                parentId="tools"
                instance="dev.rollczi.litecommands.intellijplugin.settings.LiteCommandsConfigurable"
                id="dev.rollczi.litecommands.intellijplugin.settings.LiteCommandsConfigurable"
                displayName="LiteCommands Settings"
        />

        <!-- INSPECTIONS -->
        <inspectionToolProvider implementation="dev.rollczi.litecommands.intellijplugin.inspection.LiteInspectionProvider"/>

        <!-- NULLABLE ANNOTATIONS -->
        <lang.jvm.annotationPackageSupport implementation="dev.rollczi.litecommands.intellijplugin.inspection.annotation.LiteNullabilityAnnotationPackage"/>

        <!-- SUPPRESSORS -->
        <lang.inspectionSuppressor
                language="JAVA"
                implementationClass="dev.rollczi.litecommands.intellijplugin.suppressor.ClassUnusedInspectSuppressor"
        />
        <lang.inspectionSuppressor
                language="JAVA"
                implementationClass="dev.rollczi.litecommands.intellijplugin.suppressor.ConstructorUnusedInspectSuppressor"
        />
        <lang.inspectionSuppressor
                language="JAVA"
                implementationClass="dev.rollczi.litecommands.intellijplugin.suppressor.ExecutorUnusedInspectSuppressor"
        />
        <lang.inspectionSuppressor
                language="JAVA"
                implementationClass="dev.rollczi.litecommands.intellijplugin.suppressor.OptionalArgumentSuppressor"
        />
        <lang.inspectionSuppressor
                language="JAVA"
                implementationClass="dev.rollczi.litecommands.intellijplugin.suppressor.NullableProblemsPrimitiveSuppressor"
        />

        <lang.inspectionSuppressor
                language="kotlin"
                implementationClass="dev.rollczi.litecommands.intellijplugin.suppressor.ClassUnusedInspectSuppressor"
        />
        <lang.inspectionSuppressor
                language="kotlin"
                implementationClass="dev.rollczi.litecommands.intellijplugin.suppressor.ConstructorUnusedInspectSuppressor"
        />
        <lang.inspectionSuppressor
                language="kotlin"
                implementationClass="dev.rollczi.litecommands.intellijplugin.suppressor.ExecutorUnusedInspectSuppressor"
        />
        <lang.inspectionSuppressor
                language="kotlin"
                implementationClass="dev.rollczi.litecommands.intellijplugin.suppressor.OptionalArgumentSuppressor"
        />
        <lang.inspectionSuppressor
                language="kotlin"
                implementationClass="dev.rollczi.litecommands.intellijplugin.suppressor.NullableProblemsPrimitiveSuppressor"
        />

        <!-- LINE MARKERS -->
        <codeInsight.lineMarkerProvider
                language="JAVA"
                implementationClass="dev.rollczi.litecommands.intellijplugin.marker.command.CommandMarker"
        />
        <codeInsight.lineMarkerProvider
                language="JAVA"
                implementationClass="dev.rollczi.litecommands.intellijplugin.marker.executor.ExecutorMarker"
        />
        <codeInsight.lineMarkerProvider
                language="kotlin"
                implementationClass="dev.rollczi.litecommands.intellijplugin.marker.command.CommandMarker"
        />
        <codeInsight.lineMarkerProvider
                language="kotlin"
                implementationClass="dev.rollczi.litecommands.intellijplugin.marker.executor.ExecutorMarker"
        />
    </extensions>
</idea-plugin>